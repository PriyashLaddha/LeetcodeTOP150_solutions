class Solution {
    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (root == null)
            return false;

        // CREATE TWO STACKS TO STORE THE PATH AND THE SUM
        Stack<TreeNode> path = new Stack<>();
        Stack<Integer> sumPath = new Stack<>();

        path.push(root);
        sumPath.push(root.val);

        while (!path.isEmpty()) {
            TreeNode temp = path.pop();
            int tempVal = sumPath.pop();

            // If it is a child node we will find the sum order
            // Lead node hai kya check karna agar hai toh woh waise he condition satisf nahi
            // karengi

            if (temp.left == null && temp.right == null && tempVal == targetSum)
                return true;

            if (temp.right != null) {
                path.push(temp.right);
                sumPath.push(temp.right.val + tempVal);
            }
            if (temp.left != null) {
                path.push(temp.left);
                sumPath.push(temp.left.val + tempVal);
            }
        }
        return false;
    }
}